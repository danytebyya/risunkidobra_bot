from aiogram import Router, types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from config import logger, SUPPORT_URL

router = Router()

HELP_TEXT = (
    "üìù –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –æ—à–∏–±–∫–∏ ‚Äî –ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, "
    "–∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è!"
)

def get_help_menu_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                url=SUPPORT_URL
            )
        ],
        [
            InlineKeyboardButton(
                text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="start"
            )
        ],
    ])

@router.message(Command(commands=["help"]))
async def cmd_help(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer(HELP_TEXT, reply_markup=get_help_menu_kb())
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–∑–≤–∞–ª /help –∏ —É–≤–∏–¥–µ–ª –º–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏")


def register_help_handlers(dp: Dispatcher):
    dp.include_router(router)
